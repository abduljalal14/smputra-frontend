{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport api from '../api';\nexport const useBanner = defineStore({\n  id: 'banners',\n  state: () => ({\n    banners: [],\n    banner: [],\n    error: null\n  }),\n  actions: {\n    async fetchDataBanner() {\n      try {\n        const response = await api.get('/api/banners');\n        this.banners = response.data.data.data;\n        console.log(this.banners);\n        this.error = null;\n      } catch (err) {\n        this.error = 'Error fetching category data.';\n      }\n    },\n    async storeBanner(router) {\n      let formData = new FormData();\n      formData.append(\"link\", this.banner.link);\n      formData.append(\"image\", this.banner.image);\n      const response = await api.post('/api/banners', formData);\n      try {\n        this.banner = [];\n        //redirect\n        router.push({\n          path: \"/dashboard/banners\"\n        });\n      } catch (err) {\n        //assign response error data to state \"errors\"\n        this.errors = response.data;\n      }\n    },\n    async updateBanner(router) {\n      let formData = new FormData();\n      formData.append(\"name\", this.banner.name);\n      formData.append(\"image\", this.banner.image);\n      formData.append(\"_method\", \"PATCH\");\n      //store data with API\n      const response = await api.post(`/api/banners/${this.banner.id}`, formData);\n      try {\n        this.banner = [];\n        router.push({\n          path: \"/dashboard/banners\"\n        });\n      } catch (err) {\n        this.errors = response.data;\n      }\n    },\n    async deleteBanner(id) {\n      try {\n        // Tambahkan logika penghapusan sesuai kebutuhan\n        await api.delete(`/api/banners/${id}`);\n        // Setelah penghapusan berhasil, perbarui data kategori\n        this.fetchDataBanner();\n      } catch (err) {\n        this.error = 'Error deleting banner.';\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","api","useBanner","id","state","banners","banner","error","actions","fetchDataBanner","response","get","data","console","log","err","storeBanner","router","formData","FormData","append","link","image","post","push","path","errors","updateBanner","name","deleteBanner","delete"],"sources":["E:/Programming/PROJECT/sm-putra/smputra-frontend/src/store/banner.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport api from '../api';\r\n\r\nexport const useBanner = defineStore({\r\n  id: 'banners',\r\n  state: () => ({ \r\n    banners: [],\r\n    banner: [],\r\n    error: null\r\n  }),\r\n  actions: {\r\n    async fetchDataBanner() {\r\n      try {\r\n        const response = await api.get('/api/banners');\r\n        this.banners = response.data.data.data;\r\n        console.log(this.banners)\r\n        this.error = null;\r\n      } catch (err) {\r\n        this.error = 'Error fetching category data.';\r\n      }\r\n    },\r\n    async storeBanner (router){\r\n      let formData = new FormData();\r\n      formData.append(\"link\", this.banner.link);\r\n      formData.append(\"image\", this.banner.image);\r\n      const response = await api.post('/api/banners', formData)\r\n      try{\r\n          this.banner = []\r\n          //redirect\r\n          router.push({ path: \"/dashboard/banners\" });\r\n      }\r\n      catch(err){\r\n          //assign response error data to state \"errors\"\r\n          this.errors = response.data;\r\n      }\r\n    },\r\n    async updateBanner(router) {\r\n      let formData = new FormData();\r\n      formData.append(\"name\", this.banner.name);\r\n      formData.append(\"image\", this.banner.image);\r\n      formData.append(\"_method\", \"PATCH\");\r\n      //store data with API\r\n      const response = await api.post(`/api/banners/${this.banner.id}`, formData)\r\n      try{\r\n          this.banner = []\r\n          router.push({ path: \"/dashboard/banners\" });\r\n      }\r\n      catch(err){\r\n          this.errors = response.data;\r\n      }\r\n    },\r\n    async deleteBanner(id) {\r\n      try {\r\n        // Tambahkan logika penghapusan sesuai kebutuhan\r\n        await api.delete(`/api/banners/${id}`);\r\n        // Setelah penghapusan berhasil, perbarui data kategori\r\n        this.fetchDataBanner();\r\n      } catch (err) {\r\n        this.error = 'Error deleting banner.';\r\n      }\r\n    },\r\n}\r\n});\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,GAAG,MAAM,QAAQ;AAExB,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;EACnCG,EAAE,EAAE,SAAS;EACbC,KAAK,EAAEA,CAAA,MAAO;IACZC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACT,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,cAAc,CAAC;QAC9C,IAAI,CAACN,OAAO,GAAGK,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACA,IAAI;QACtCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,OAAO,CAAC;QACzB,IAAI,CAACE,KAAK,GAAG,IAAI;MACnB,CAAC,CAAC,OAAOQ,GAAG,EAAE;QACZ,IAAI,CAACR,KAAK,GAAG,+BAA+B;MAC9C;IACF,CAAC;IACD,MAAMS,WAAWA,CAAEC,MAAM,EAAC;MACxB,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACd,MAAM,CAACe,IAAI,CAAC;MACzCH,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACd,MAAM,CAACgB,KAAK,CAAC;MAC3C,MAAMZ,QAAQ,GAAG,MAAMT,GAAG,CAACsB,IAAI,CAAC,cAAc,EAAEL,QAAQ,CAAC;MACzD,IAAG;QACC,IAAI,CAACZ,MAAM,GAAG,EAAE;QAChB;QACAW,MAAM,CAACO,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAqB,CAAC,CAAC;MAC/C,CAAC,CACD,OAAMV,GAAG,EAAC;QACN;QACA,IAAI,CAACW,MAAM,GAAGhB,QAAQ,CAACE,IAAI;MAC/B;IACF,CAAC;IACD,MAAMe,YAAYA,CAACV,MAAM,EAAE;MACzB,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACd,MAAM,CAACsB,IAAI,CAAC;MACzCV,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACd,MAAM,CAACgB,KAAK,CAAC;MAC3CJ,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC;MACnC;MACA,MAAMV,QAAQ,GAAG,MAAMT,GAAG,CAACsB,IAAI,CAAE,gBAAe,IAAI,CAACjB,MAAM,CAACH,EAAG,EAAC,EAAEe,QAAQ,CAAC;MAC3E,IAAG;QACC,IAAI,CAACZ,MAAM,GAAG,EAAE;QAChBW,MAAM,CAACO,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAqB,CAAC,CAAC;MAC/C,CAAC,CACD,OAAMV,GAAG,EAAC;QACN,IAAI,CAACW,MAAM,GAAGhB,QAAQ,CAACE,IAAI;MAC/B;IACF,CAAC;IACD,MAAMiB,YAAYA,CAAC1B,EAAE,EAAE;MACrB,IAAI;QACF;QACA,MAAMF,GAAG,CAAC6B,MAAM,CAAE,gBAAe3B,EAAG,EAAC,CAAC;QACtC;QACA,IAAI,CAACM,eAAe,CAAC,CAAC;MACxB,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZ,IAAI,CAACR,KAAK,GAAG,wBAAwB;MACvC;IACF;EACJ;AACA,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}