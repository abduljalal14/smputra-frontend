{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport api from '../api';\nexport const useOrder = defineStore({\n  id: 'order',\n  state: () => ({\n    orderItem: null,\n    orders: null,\n    customerName: '',\n    customerAddres: '',\n    customerPhone: '',\n    storeLocation: \"Sari Mulya Pasarbatang\",\n    ongkir: 3000,\n    orderMethod: 'COD',\n    subtotal: 0,\n    total: 0\n  }),\n  actions: {\n    async fetchDataOrders() {\n      try {\n        const response = await api.get('/api/orders');\n        this.orders = response.data.data.data;\n        this.error = null;\n      } catch (err) {\n        this.error = 'Error fetching orders data.';\n      }\n    },\n    async storeOrder(router, orderItem) {\n      let formData = new FormData();\n      formData.append(\"customer_name\", this.customerName);\n      formData.append(\"customer_phone\", this.customerPhone);\n      formData.append(\"customer_address\", this.customerAddres);\n      formData.append(\"store_location\", this.storeLocation);\n      formData.append(\"shipping_method\", this.orderMethod);\n      formData.append(\"details\", orderItem);\n      console.log('Isi dari orderItem: ', orderItem);\n      console.log('Isi dari formData: ', formData);\n      const response = await api.post('/api/orders', formData);\n      try {\n        this.orders = [];\n        //redirect\n        router.push({\n          path: \"/\"\n        });\n      } catch (err) {\n        //assign response error data to state \"errors\"\n        this.errors = response.data;\n      }\n    }\n  },\n  getters: {\n    invalid() {\n      return this.customerName === '' || this.customerAddres === '' || this.customerPhone === '';\n    },\n    getTotal() {\n      if (this.orderMethod == 'COD') {\n        this.total = this.subtotal + this.ongkir;\n      } else {\n        this.total = this.subtotal;\n      }\n      return this.total;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","api","useOrder","id","state","orderItem","orders","customerName","customerAddres","customerPhone","storeLocation","ongkir","orderMethod","subtotal","total","actions","fetchDataOrders","response","get","data","error","err","storeOrder","router","formData","FormData","append","console","log","post","push","path","errors","getters","invalid","getTotal"],"sources":["F:/Programming/_PROJECT/sm-putra/smputra-frontend/src/store/order.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport api from '../api';\r\n\r\nexport const useOrder = defineStore({\r\n  id: 'order',\r\n  state: () => ({ \r\n    orderItem: null,\r\n    orders:null,\r\n    customerName: '',\r\n    customerAddres: '',\r\n    customerPhone: '',\r\n    storeLocation: \"Sari Mulya Pasarbatang\",\r\n    ongkir: 3000,\r\n    orderMethod: 'COD',\r\n    subtotal: 0,\r\n    total: 0\r\n  }),\r\n  actions: {\r\n    async fetchDataOrders() {\r\n      try {\r\n        const response = await api.get('/api/orders');\r\n        this.orders = response.data.data.data;\r\n        this.error = null;\r\n      } catch (err) {\r\n        this.error = 'Error fetching orders data.';\r\n      }\r\n    },\r\n    async storeOrder (router, orderItem){\r\n    \r\n      let formData = new FormData();\r\n      formData.append(\"customer_name\", this.customerName);\r\n      formData.append(\"customer_phone\", this.customerPhone);\r\n      formData.append(\"customer_address\", this.customerAddres);\r\n      formData.append(\"store_location\", this.storeLocation);\r\n      formData.append(\"shipping_method\", this.orderMethod);\r\n      formData.append(\"details\", orderItem);\r\n      console.log('Isi dari orderItem: ', orderItem)\r\n      console.log('Isi dari formData: ', formData)\r\n      const response = await api.post('/api/orders', formData)\r\n      try{\r\n          this.orders = []\r\n          //redirect\r\n          router.push({ path: \"/\" });\r\n      }\r\n      catch(err){\r\n          //assign response error data to state \"errors\"\r\n          this.errors = response.data;\r\n      }\r\n    },\r\n  },\r\n\r\n  getters: {\r\n    invalid() {\r\n      return this.customerName === '' || this.customerAddres === '' || this.customerPhone === '';\r\n  },\r\n    getTotal(){\r\n      if (this.orderMethod == 'COD') {\r\n        this.total = this.subtotal+this.ongkir\r\n      } else {\r\n        this.total = this.subtotal\r\n      }\r\n      return this.total\r\n  }\r\n  }\r\n});\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,GAAG,MAAM,QAAQ;AAExB,OAAO,MAAMC,QAAQ,GAAGF,WAAW,CAAC;EAClCG,EAAE,EAAE,OAAO;EACXC,KAAK,EAAEA,CAAA,MAAO;IACZC,SAAS,EAAE,IAAI;IACfC,MAAM,EAAC,IAAI;IACXC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,EAAE;IAClBC,aAAa,EAAE,EAAE;IACjBC,aAAa,EAAE,wBAAwB;IACvCC,MAAM,EAAE,IAAI;IACZC,WAAW,EAAE,KAAK;IAClBC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAE;EACT,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,GAAG,CAAC,aAAa,CAAC;QAC7C,IAAI,CAACZ,MAAM,GAAGW,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACA,IAAI;QACrC,IAAI,CAACC,KAAK,GAAG,IAAI;MACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZ,IAAI,CAACD,KAAK,GAAG,6BAA6B;MAC5C;IACF,CAAC;IACD,MAAME,UAAUA,CAAEC,MAAM,EAAElB,SAAS,EAAC;MAElC,IAAImB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC7BD,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE,IAAI,CAACnB,YAAY,CAAC;MACnDiB,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAACjB,aAAa,CAAC;MACrDe,QAAQ,CAACE,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAClB,cAAc,CAAC;MACxDgB,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAChB,aAAa,CAAC;MACrDc,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAACd,WAAW,CAAC;MACpDY,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAErB,SAAS,CAAC;MACrCsB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEvB,SAAS,CAAC;MAC9CsB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,QAAQ,CAAC;MAC5C,MAAMP,QAAQ,GAAG,MAAMhB,GAAG,CAAC4B,IAAI,CAAC,aAAa,EAAEL,QAAQ,CAAC;MACxD,IAAG;QACC,IAAI,CAAClB,MAAM,GAAG,EAAE;QAChB;QACAiB,MAAM,CAACO,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAI,CAAC,CAAC;MAC9B,CAAC,CACD,OAAMV,GAAG,EAAC;QACN;QACA,IAAI,CAACW,MAAM,GAAGf,QAAQ,CAACE,IAAI;MAC/B;IACF;EACF,CAAC;EAEDc,OAAO,EAAE;IACPC,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAAC3B,YAAY,KAAK,EAAE,IAAI,IAAI,CAACC,cAAc,KAAK,EAAE,IAAI,IAAI,CAACC,aAAa,KAAK,EAAE;IAC9F,CAAC;IACC0B,QAAQA,CAAA,EAAE;MACR,IAAI,IAAI,CAACvB,WAAW,IAAI,KAAK,EAAE;QAC7B,IAAI,CAACE,KAAK,GAAG,IAAI,CAACD,QAAQ,GAAC,IAAI,CAACF,MAAM;MACxC,CAAC,MAAM;QACL,IAAI,CAACG,KAAK,GAAG,IAAI,CAACD,QAAQ;MAC5B;MACA,OAAO,IAAI,CAACC,KAAK;IACrB;EACA;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}