{"ast":null,"code":"import Slick from 'vue-slick';\nexport default {\n  components: {\n    Slick\n  },\n  data() {\n    return {\n      slickOptions: {\n        slidesToShow: 3\n        // Any other options that can be got from plugin documentation\n      }\n    };\n  },\n\n  // All slick methods can be used too, example here\n  methods: {\n    next() {\n      this.$refs.slick.next();\n    },\n    prev() {\n      this.$refs.slick.prev();\n    },\n    reInit() {\n      // Helpful if you have to deal with v-for to update dynamic lists\n      this.$nextTick(() => {\n        this.$refs.slick.reSlick();\n      });\n    },\n    // Events listeners\n    handleAfterChange(event, slick, currentSlide) {\n      console.log('handleAfterChange', event, slick, currentSlide);\n    },\n    handleBeforeChange(event, slick, currentSlide, nextSlide) {\n      console.log('handleBeforeChange', event, slick, currentSlide, nextSlide);\n    },\n    handleBreakpoint(event, slick, breakpoint) {\n      console.log('handleBreakpoint', event, slick, breakpoint);\n    },\n    handleDestroy(event, slick) {\n      console.log('handleDestroy', event, slick);\n    },\n    handleEdge(event, slick, direction) {\n      console.log('handleEdge', event, slick, direction);\n    },\n    handleInit(event, slick) {\n      console.log('handleInit', event, slick);\n    },\n    handleReInit(event, slick) {\n      console.log('handleReInit', event, slick);\n    },\n    handleSetPosition(event, slick) {\n      console.log('handleSetPosition', event, slick);\n    },\n    handleSwipe(event, slick, direction) {\n      console.log('handleSwipe', event, slick, direction);\n    },\n    handleLazyLoaded(event, slick, image, imageSource) {\n      console.log('handleLazyLoaded', event, slick, image, imageSource);\n    },\n    handleLazyLoadError(event, slick, image, imageSource) {\n      console.log('handleLazeLoadError', event, slick, image, imageSource);\n    }\n  }\n};","map":{"version":3,"names":["Slick","components","data","slickOptions","slidesToShow","methods","next","$refs","slick","prev","reInit","$nextTick","reSlick","handleAfterChange","event","currentSlide","console","log","handleBeforeChange","nextSlide","handleBreakpoint","breakpoint","handleDestroy","handleEdge","direction","handleInit","handleReInit","handleSetPosition","handleSwipe","handleLazyLoaded","image","imageSource","handleLazyLoadError"],"sources":["F:\\Programming\\_PROJECT\\sm-putra\\smputra-frontend\\src\\components\\CarouselSlick.vue"],"sourcesContent":["<template lang=\"\">\r\n    <slick\r\n  ref=\"slick\"\r\n  :options=\"slickOptions\"\r\n  @afterChange=\"handleAfterChange\"\r\n  @beforeChange=\"handleBeforeChange\"\r\n  @breakpoint=\"handleBreakpoint\"\r\n  @destroy=\"handleDestroy\"\r\n  @edge=\"handleEdge\"\r\n  @init=\"handleInit\"\r\n  @reInit=\"handleReInit\"\r\n  @setPosition=\"handleSetPosition\"\r\n  @swipe=\"handleSwipe\"\r\n  @lazyLoaded=\"handleLazyLoaded\"\r\n  @lazyLoadError=\"handleLazyLoadError\">\r\n  <a href=\"http://placehold.it/2000x1000\"><img src=\"http://placehold.it/2000x1000\" alt=\"\"></a>\r\n  <a href=\"http://placehold.it/2000x1000\"><img src=\"http://placehold.it/2000x1000\" alt=\"\"></a>\r\n  <a href=\"http://placehold.it/2000x1000\"><img src=\"http://placehold.it/2000x1000\" alt=\"\"></a>\r\n  <a href=\"http://placehold.it/2000x1000\"><img src=\"http://placehold.it/2000x1000\" alt=\"\"></a>\r\n  <a href=\"http://placehold.it/2000x1000\"><img src=\"http://placehold.it/2000x1000\" alt=\"\"></a>\r\n</slick>\r\n</template>\r\n<script>\r\n    import Slick from 'vue-slick';\r\nexport default {\r\n    components: { Slick },\r\n    data() {\r\n        return {\r\n            slickOptions: {\r\n                slidesToShow: 3,\r\n                // Any other options that can be got from plugin documentation\r\n            },\r\n        };\r\n    },\r\n\r\n    // All slick methods can be used too, example here\r\n    methods: {\r\n        next() {\r\n            this.$refs.slick.next();\r\n        },\r\n\r\n        prev() {\r\n            this.$refs.slick.prev();\r\n        },\r\n\r\n        reInit() {\r\n            // Helpful if you have to deal with v-for to update dynamic lists\r\n            this.$nextTick(() => {\r\n                this.$refs.slick.reSlick();\r\n            });\r\n        },\r\n\r\n        // Events listeners\r\n        handleAfterChange(event, slick, currentSlide) {\r\n            console.log('handleAfterChange', event, slick, currentSlide);\r\n        },\r\n        handleBeforeChange(event, slick, currentSlide, nextSlide) {\r\n            console.log('handleBeforeChange', event, slick, currentSlide, nextSlide);\r\n        },\r\n        handleBreakpoint(event, slick, breakpoint) {\r\n            console.log('handleBreakpoint', event, slick, breakpoint);\r\n        },\r\n        handleDestroy(event, slick) {\r\n            console.log('handleDestroy', event, slick);\r\n        },\r\n        handleEdge(event, slick, direction) {\r\n            console.log('handleEdge', event, slick, direction);\r\n        },\r\n        handleInit(event, slick) {\r\n            console.log('handleInit', event, slick);\r\n        },\r\n        handleReInit(event, slick) {\r\n            console.log('handleReInit', event, slick);\r\n        },\r\n        handleSetPosition(event, slick) {\r\n            console.log('handleSetPosition', event, slick);\r\n        },\r\n        handleSwipe(event, slick, direction) {\r\n            console.log('handleSwipe', event, slick, direction);\r\n        },\r\n        handleLazyLoaded(event, slick, image, imageSource) {\r\n            console.log('handleLazyLoaded', event, slick, image, imageSource);\r\n        },\r\n        handleLazyLoadError(event, slick, image, imageSource) {\r\n            console.log('handleLazeLoadError', event, slick, image, imageSource);\r\n        },\r\n    },\r\n}\r\n    \r\n\r\n</script>\r\n<style lang=\"\">\r\n    \r\n</style>"],"mappings":"AAuBI,OAAOA,KAAI,MAAO,WAAW;AACjC,eAAe;EACXC,UAAU,EAAE;IAAED;EAAM,CAAC;EACrBE,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,YAAY,EAAE;QACVC,YAAY,EAAE;QACd;MACJ;IACJ,CAAC;EACL,CAAC;;EAED;EACAC,OAAO,EAAE;IACLC,IAAIA,CAAA,EAAG;MACH,IAAI,CAACC,KAAK,CAACC,KAAK,CAACF,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEDG,IAAIA,CAAA,EAAG;MACH,IAAI,CAACF,KAAK,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAEDC,MAAMA,CAAA,EAAG;MACL;MACA,IAAI,CAACC,SAAS,CAAC,MAAM;QACjB,IAAI,CAACJ,KAAK,CAACC,KAAK,CAACI,OAAO,CAAC,CAAC;MAC9B,CAAC,CAAC;IACN,CAAC;IAED;IACAC,iBAAiBA,CAACC,KAAK,EAAEN,KAAK,EAAEO,YAAY,EAAE;MAC1CC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,KAAK,EAAEN,KAAK,EAAEO,YAAY,CAAC;IAChE,CAAC;IACDG,kBAAkBA,CAACJ,KAAK,EAAEN,KAAK,EAAEO,YAAY,EAAEI,SAAS,EAAE;MACtDH,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,KAAK,EAAEN,KAAK,EAAEO,YAAY,EAAEI,SAAS,CAAC;IAC5E,CAAC;IACDC,gBAAgBA,CAACN,KAAK,EAAEN,KAAK,EAAEa,UAAU,EAAE;MACvCL,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,KAAK,EAAEN,KAAK,EAAEa,UAAU,CAAC;IAC7D,CAAC;IACDC,aAAaA,CAACR,KAAK,EAAEN,KAAK,EAAE;MACxBQ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,KAAK,EAAEN,KAAK,CAAC;IAC9C,CAAC;IACDe,UAAUA,CAACT,KAAK,EAAEN,KAAK,EAAEgB,SAAS,EAAE;MAChCR,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,KAAK,EAAEN,KAAK,EAAEgB,SAAS,CAAC;IACtD,CAAC;IACDC,UAAUA,CAACX,KAAK,EAAEN,KAAK,EAAE;MACrBQ,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,KAAK,EAAEN,KAAK,CAAC;IAC3C,CAAC;IACDkB,YAAYA,CAACZ,KAAK,EAAEN,KAAK,EAAE;MACvBQ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,KAAK,EAAEN,KAAK,CAAC;IAC7C,CAAC;IACDmB,iBAAiBA,CAACb,KAAK,EAAEN,KAAK,EAAE;MAC5BQ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,KAAK,EAAEN,KAAK,CAAC;IAClD,CAAC;IACDoB,WAAWA,CAACd,KAAK,EAAEN,KAAK,EAAEgB,SAAS,EAAE;MACjCR,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,KAAK,EAAEN,KAAK,EAAEgB,SAAS,CAAC;IACvD,CAAC;IACDK,gBAAgBA,CAACf,KAAK,EAAEN,KAAK,EAAEsB,KAAK,EAAEC,WAAW,EAAE;MAC/Cf,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,KAAK,EAAEN,KAAK,EAAEsB,KAAK,EAAEC,WAAW,CAAC;IACrE,CAAC;IACDC,mBAAmBA,CAAClB,KAAK,EAAEN,KAAK,EAAEsB,KAAK,EAAEC,WAAW,EAAE;MAClDf,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,KAAK,EAAEN,KAAK,EAAEsB,KAAK,EAAEC,WAAW,CAAC;IACxE;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}