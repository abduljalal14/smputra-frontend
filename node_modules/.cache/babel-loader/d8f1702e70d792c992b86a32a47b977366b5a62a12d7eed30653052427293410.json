{"ast":null,"code":"import { defineStore } from 'pinia';\nimport api from '../api';\nexport const useProducts = defineStore({\n  id: 'products',\n  state: () => ({\n    products: [],\n    currentPage: 1,\n    lastPage: 1,\n    query: '',\n    error: null\n  }),\n  actions: {\n    async fetchDataProducts(page = 1) {\n      try {\n        const params = {\n          page\n        };\n        if (this.query) {\n          params.query = this.query;\n        }\n        const response = await api.get('/api/products', {\n          params\n        });\n        this.products = response.data.data.data;\n        this.currentPage.value = response.data.data.current_page;\n        this.lastPage.value = response.data.data.last_page;\n        this.error = null;\n      } catch (err) {\n        this.error = 'Error fetching category data.';\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","api","useProducts","id","state","products","currentPage","lastPage","query","error","actions","fetchDataProducts","page","params","response","get","data","value","current_page","last_page","err"],"sources":["E:/Programming/PROJECT/sm-putra/smputra-frontend/src/store/products.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport api from '../api';\r\n\r\nexport const useProducts = defineStore({\r\n  id: 'products',\r\n  state: () => ({ \r\n    products: [],\r\n    currentPage: 1,\r\n    lastPage: 1,\r\n    query: '',\r\n    error: null\r\n  }),\r\n  actions: {\r\n    async fetchDataProducts(page = 1) {\r\n      try {\r\n        const params = { page };\r\n        if (this.query) {\r\n          params.query = this.query;\r\n        }\r\n        const response = await api.get('/api/products', { params });\r\n        this.products = response.data.data.data;\r\n        this.currentPage.value = response.data.data.current_page;\r\n        this.lastPage.value = response.data.data.last_page;\r\n        this.error = null;\r\n      } catch (err) {\r\n        this.error = 'Error fetching category data.';\r\n      }\r\n    },\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,GAAG,MAAM,QAAQ;AAExB,OAAO,MAAMC,WAAW,GAAGF,WAAW,CAAC;EACrCG,EAAE,EAAE,UAAU;EACdC,KAAK,EAAEA,CAAA,MAAO;IACZC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,CAAC;IACdC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE;EACT,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,iBAAiBA,CAACC,IAAI,GAAG,CAAC,EAAE;MAChC,IAAI;QACF,MAAMC,MAAM,GAAG;UAAED;QAAK,CAAC;QACvB,IAAI,IAAI,CAACJ,KAAK,EAAE;UACdK,MAAM,CAACL,KAAK,GAAG,IAAI,CAACA,KAAK;QAC3B;QACA,MAAMM,QAAQ,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAC,eAAe,EAAE;UAAEF;QAAO,CAAC,CAAC;QAC3D,IAAI,CAACR,QAAQ,GAAGS,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACA,IAAI;QACvC,IAAI,CAACV,WAAW,CAACW,KAAK,GAAGH,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACE,YAAY;QACxD,IAAI,CAACX,QAAQ,CAACU,KAAK,GAAGH,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACG,SAAS;QAClD,IAAI,CAACV,KAAK,GAAG,IAAI;MACnB,CAAC,CAAC,OAAOW,GAAG,EAAE;QACZ,IAAI,CAACX,KAAK,GAAG,+BAA+B;MAC9C;IACF;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}