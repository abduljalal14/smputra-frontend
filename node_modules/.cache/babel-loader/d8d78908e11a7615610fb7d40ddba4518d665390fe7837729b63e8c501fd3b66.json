{"ast":null,"code":"import { useOrder } from '@/store/order';\nimport { useProducts } from '@/store/products';\nimport { onMounted, ref, watch } from 'vue';\nimport jsPDF from 'jspdf';\nimport '@/assets/js/thermal-receipt-normal';\nexport default {\n  __name: 'DetailOrder',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const subTotal = ref(0);\n    const orderStore = useOrder();\n    const productStore = useProducts();\n    function getSubtotal() {\n      subTotal.value = 0;\n      for (var i = 0; i < orderStore.order.items.length; i++) {\n        const product = productStore.products.find(product => product.id === orderStore.order.items[i].product_id);\n        if (product) {\n          subTotal.value += product.price * orderStore.order.items[i].qty;\n        }\n      }\n    }\n    const generatePdf = () => {\n      // Variabel\n      const productName = 'Widget';\n      const quantity = 5;\n      const unitPrice = 10;\n\n      // Tentukan lebar kertas thermal kasir 80mm dalam satuan mm\n      const paperWidth = 80;\n\n      // Buat instance dari jsPDF dengan menentukan lebar dan panjang dokumen\n      const pdf = new jsPDF({\n        unit: 'mm',\n        format: [paperWidth, 210] // 210 adalah panjang default, sesuaikan dengan kebutuhan\n      });\n\n      // Atur jenis font menjadi monospace\n      pdf.setFont('thermal-receipt', 'normal');\n\n      // Atur ukuran teks menjadi 9 pt\n      pdf.setFontSize(9);\n\n      // Menambahkan konten ke PDF\n      pdf.text('Fake Invoice', 5, 5);\n      pdf.text('--------------------------', 5, 10);\n      pdf.text(`Product Name: ${productName}`, 5, 15);\n      pdf.text(`Quantity: ${quantity}`, 5, 20);\n      pdf.text(`Unit Price: $${unitPrice}`, 5, 25);\n      pdf.text('--------------------------', 5, 30);\n      pdf.text(`Total: $${quantity * unitPrice}`, 5, 35);\n\n      // Men-download PDF\n      pdf.save('fake-invoice.pdf');\n    };\n    watch(() => [orderStore.order, productStore.products], () => {\n      getSubtotal();\n    });\n    onMounted(() => {\n      productStore.fetchDataProducts();\n      orderStore.fetchDataOrder(1);\n    });\n    const __returned__ = {\n      subTotal,\n      orderStore,\n      productStore,\n      getSubtotal,\n      generatePdf,\n      get useOrder() {\n        return useOrder;\n      },\n      get useProducts() {\n        return useProducts;\n      },\n      onMounted,\n      ref,\n      watch,\n      get jsPDF() {\n        return jsPDF;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["useOrder","useProducts","onMounted","ref","watch","jsPDF","subTotal","orderStore","productStore","getSubtotal","value","i","order","items","length","product","products","find","id","product_id","price","qty","generatePdf","productName","quantity","unitPrice","paperWidth","pdf","unit","format","setFont","setFontSize","text","save","fetchDataProducts","fetchDataOrder"],"sources":["E:/Programming/PROJECT/sm-putra/smputra-frontend/src/views/detail-order/DetailOrder.vue"],"sourcesContent":["<template lang=\"\">\r\n   <!-- <li>Nama : {{ orderStore.order.name }}</li>\r\n                                    <li>No. HP : {{ orderStore.order.phone }}</li>\r\n                                    <li>Alamat : {{ orderStore.order.address }}</li>\r\n                                    <li>Toko : {{ orderStore.order.store }}</li>\r\n                                    <li>Metode : {{ orderStore.order.method }}</li>\r\n                                    <li>Tanggal : {{ orderStore.order.date }}</li> -->\r\n    <br>\r\n    <br>\r\n    <br>\r\n    <section class=\"mb-lg-14 mb-8 mt-5\">\r\n   <div class=\"container\">\r\n      <!-- row -->\r\n      <div class=\"row\">\r\n         <!-- col -->\r\n         <div class=\"col-12\">\r\n            <div>\r\n               <div class=\"mb-8\">\r\n                  <!-- text -->\r\n                  <h1 class=\"fw-bold mb-0\">Rincian Pesanan</h1>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n      <div>\r\n         <!-- row -->\r\n         <div class=\"row\">\r\n            <div class=\"col-lg-6 col-md-12\">\r\n               <div class=\"px-6 py-4 card shadow-sm\">\r\n                  \r\n                  <h5 class=\" bg-transparent mt-2 text-primary\">Informasi Pengiriman</h5>\r\n                  <h6 class=\" bg-transparent\">{{ orderStore.order.method }} - ID12345678</h6>\r\n                  \r\n                  <h5 class=\" bg-transparent mt-2 text-primary\">Alamat Pengiriman</h5>\r\n                  <h6 class=\" bg-transparent\">{{ orderStore.order.name }}</h6>\r\n                  <h6 class=\" bg-transparent\">{{ orderStore.order.phone }}</h6>\r\n                  <h6 class=\" bg-transparent\">{{ orderStore.order.address }}</h6>\r\n                  \r\n               </div>\r\n            </div>\r\n            <div class=\"col-12 col-md-12  col-lg-6\">\r\n               <div class=\"mt-4 mt-lg-0\">\r\n                  <div class=\"card shadow-sm\">\r\n                     <h5 class=\"px-6 py-4 bg-transparent mb-0 text-primary\" >Rincian Item</h5>\r\n                     <ul class=\"list-group list-group-flush\">\r\n                        <!-- list group item -->\r\n                        <li v-for=\"(item, index) in orderStore.order.items\" :key=\"index\" class=\"list-group-item px-4 py-3\">\r\n                           <div class=\"row align-items-center\">\r\n                              <div class=\"col-2 col-md-2\">\r\n                                 <img v-bind:src=\"productStore.products.find(product => product.id === item.product_id).image\" alt=\"Ecommerce\" class=\"img-fluid\">\r\n                              </div>\r\n                              <div class=\"col-5 col-md-5\">\r\n                                 <h6 class=\"mb-0\">{{ productStore.products.find(product => product.id === item.product_id).name }}</h6>\r\n                                 <span><small class=\"text-muted\">{{ productStore.products.find(product => product.id === item.product_id).category.name }}</small></span>\r\n                              </div>\r\n                              <div class=\"col-2 col-md-2 text-center text-muted\">\r\n                                 <span>{{  item.qty }}</span>\r\n                              </div>\r\n                              <div class=\"col-3 text-lg-end text-start text-md-end col-md-3\">\r\n                                 <span class=\"fw-bold\">Rp {{ productStore.products.find(product => product.id === item.product_id).price * item.qty }}</span>\r\n                              </div>\r\n                           </div>\r\n                        </li>\r\n                     </ul>\r\n                     <h5 class=\"px-6 py-4 bg-transparent mb-0 text-primary\">Keterangan</h5>\r\n                     <div class=\"card mb-2\">\r\n                        <!-- list group -->\r\n                        <ul class=\"list-group list-group-flush\">\r\n                           <!-- list group item -->\r\n                           <li class=\"list-group-item d-flex justify-content-between align-items-start\">\r\n                              <div class=\"me-auto\">\r\n                                 <div>Item Subtotal</div>\r\n                              </div>\r\n                              <span>Rp {{ subTotal }}</span>\r\n                           </li>\r\n                           <!-- list group item -->\r\n                           <li v-if=\"orderStore.orderMethod == 'COD'\" class=\"list-group-item d-flex justify-content-between align-items-start\">\r\n                              <div class=\"me-auto\">\r\n                                 <div>Biaya Ongkir</div>\r\n                              </div>\r\n                              <span>Rp. {{ orderStore.ongkir }}</span>\r\n                           </li>\r\n                           <!-- list group item -->\r\n                           <li class=\"list-group-item d-flex justify-content-between align-items-start\">\r\n                              <div class=\"me-auto\">\r\n                                 <div class=\"fw-bold\">Total</div>\r\n                              </div>\r\n                              <span v-if=\"orderStore.order.method != 'COD'\" class=\"fw-bold\">Rp. {{ orderStore.subtotal }}</span>\r\n                              <span v-else class=\"fw-bold\">Rp. {{ subTotal+orderStore.ongkir }}</span>\r\n                           </li>\r\n                        </ul>\r\n                     </div>\r\n                     <div class=\"d-grid mb-1 mt-4\">\r\n                        \r\n                        <button @click=\"generatePdf\" class=\"btn btn-primary btn-lg d-flex justify-content-between align-items-center\" type=\"submit\">\r\n                           Unduh Invoice\r\n                        </button>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </div>\r\n</section>\r\n</template>\r\n<script setup>\r\nimport { useOrder } from '@/store/order'\r\nimport { useProducts } from '@/store/products';\r\nimport { onMounted, ref,watch } from 'vue'\r\nimport jsPDF from 'jspdf';\r\nimport '@/assets/js/thermal-receipt-normal';\r\n\r\nconst subTotal = ref(0);\r\n\r\nconst orderStore = useOrder()\r\nconst productStore = useProducts()\r\n\r\nfunction getSubtotal() {\r\n   subTotal.value = 0;\r\n   for (var i = 0; i < orderStore.order.items.length; i++) {\r\n      const product = productStore.products.find(product => product.id === orderStore.order.items[i].product_id);\r\n        if (product) {\r\n          subTotal.value += product.price * orderStore.order.items[i].qty;\r\n        }\r\n   }\r\n}\r\n\r\nconst generatePdf = () => {\r\n       // Variabel\r\n       const productName = 'Widget';\r\n      const quantity = 5;\r\n      const unitPrice = 10;\r\n\r\n      // Tentukan lebar kertas thermal kasir 80mm dalam satuan mm\r\n      const paperWidth = 80;\r\n\r\n      // Buat instance dari jsPDF dengan menentukan lebar dan panjang dokumen\r\n      const pdf = new jsPDF({\r\n        unit: 'mm',\r\n        format: [paperWidth, 210], // 210 adalah panjang default, sesuaikan dengan kebutuhan\r\n      });\r\n\r\n      // Atur jenis font menjadi monospace\r\n      pdf.setFont('thermal-receipt', 'normal');\r\n\r\n      // Atur ukuran teks menjadi 9 pt\r\n      pdf.setFontSize(9);\r\n\r\n      // Menambahkan konten ke PDF\r\n      pdf.text('Fake Invoice', 5, 5);\r\n      pdf.text('--------------------------', 5, 10);\r\n      pdf.text(`Product Name: ${productName}`, 5, 15);\r\n      pdf.text(`Quantity: ${quantity}`, 5, 20);\r\n      pdf.text(`Unit Price: $${unitPrice}`, 5, 25);\r\n      pdf.text('--------------------------', 5, 30);\r\n      pdf.text(`Total: $${quantity * unitPrice}`, 5, 35);\r\n\r\n      // Men-download PDF\r\n      pdf.save('fake-invoice.pdf');\r\n};\r\n\r\n\r\nwatch(() => [orderStore.order, productStore.products], () => {\r\n      getSubtotal();\r\n    });\r\n\r\nonMounted(() => {\r\n   productStore.fetchDataProducts();\r\n   orderStore.fetchDataOrder(1);\r\n});\r\n\r\n</script>\r\n\r\n\r\n<style lang=\"css\"></style>"],"mappings":"AA2GA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,GAAG,EAACC,KAAK,QAAQ,KAAK;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oCAAoC;;;;;;;IAE3C,MAAMC,QAAQ,GAAGH,GAAG,CAAC,CAAC,CAAC;IAEvB,MAAMI,UAAU,GAAGP,QAAQ,CAAC,CAAC;IAC7B,MAAMQ,YAAY,GAAGP,WAAW,CAAC,CAAC;IAElC,SAASQ,WAAWA,CAAA,EAAG;MACpBH,QAAQ,CAACI,KAAK,GAAG,CAAC;MAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,UAAU,CAACK,KAAK,CAACC,KAAK,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;QACrD,MAAMI,OAAO,GAAGP,YAAY,CAACQ,QAAQ,CAACC,IAAI,CAACF,OAAO,IAAIA,OAAO,CAACG,EAAE,KAAKX,UAAU,CAACK,KAAK,CAACC,KAAK,CAACF,CAAC,CAAC,CAACQ,UAAU,CAAC;QACxG,IAAIJ,OAAO,EAAE;UACXT,QAAQ,CAACI,KAAK,IAAIK,OAAO,CAACK,KAAK,GAAGb,UAAU,CAACK,KAAK,CAACC,KAAK,CAACF,CAAC,CAAC,CAACU,GAAG;QACjE;MACL;IACH;IAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACnB;MACA,MAAMC,WAAW,GAAG,QAAQ;MAC7B,MAAMC,QAAQ,GAAG,CAAC;MAClB,MAAMC,SAAS,GAAG,EAAE;;MAEpB;MACA,MAAMC,UAAU,GAAG,EAAE;;MAErB;MACA,MAAMC,GAAG,GAAG,IAAItB,KAAK,CAAC;QACpBuB,IAAI,EAAE,IAAI;QACVC,MAAM,EAAE,CAACH,UAAU,EAAE,GAAG,CAAC,CAAE;MAC7B,CAAC,CAAC;;MAEF;MACAC,GAAG,CAACG,OAAO,CAAC,iBAAiB,EAAE,QAAQ,CAAC;;MAExC;MACAH,GAAG,CAACI,WAAW,CAAC,CAAC,CAAC;;MAElB;MACAJ,GAAG,CAACK,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC;MAC9BL,GAAG,CAACK,IAAI,CAAC,4BAA4B,EAAE,CAAC,EAAE,EAAE,CAAC;MAC7CL,GAAG,CAACK,IAAI,CAAE,iBAAgBT,WAAY,EAAC,EAAE,CAAC,EAAE,EAAE,CAAC;MAC/CI,GAAG,CAACK,IAAI,CAAE,aAAYR,QAAS,EAAC,EAAE,CAAC,EAAE,EAAE,CAAC;MACxCG,GAAG,CAACK,IAAI,CAAE,gBAAeP,SAAU,EAAC,EAAE,CAAC,EAAE,EAAE,CAAC;MAC5CE,GAAG,CAACK,IAAI,CAAC,4BAA4B,EAAE,CAAC,EAAE,EAAE,CAAC;MAC7CL,GAAG,CAACK,IAAI,CAAE,WAAUR,QAAQ,GAAGC,SAAU,EAAC,EAAE,CAAC,EAAE,EAAE,CAAC;;MAElD;MACAE,GAAG,CAACM,IAAI,CAAC,kBAAkB,CAAC;IAClC,CAAC;IAGD7B,KAAK,CAAC,MAAM,CAACG,UAAU,CAACK,KAAK,EAAEJ,YAAY,CAACQ,QAAQ,CAAC,EAAE,MAAM;MACvDP,WAAW,CAAC,CAAC;IACf,CAAC,CAAC;IAENP,SAAS,CAAC,MAAM;MACbM,YAAY,CAAC0B,iBAAiB,CAAC,CAAC;MAChC3B,UAAU,CAAC4B,cAAc,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}