{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onMounted } from 'vue';\nimport { useAuth } from \"@/store/auth\";\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'IndexView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const userStore = useAuth();\n\n    // check user already logged in\n    onMounted(() => {\n      if (userStore.loggedIn) {\n        // Redirect to dashboard using the router instance\n        router.push({\n          name: 'dashboard'\n        });\n      }\n    });\n\n    // Handle the login action\n    const loginUser = async () => {\n      console.log('Before pushing to dashboard:', router);\n      await userStore.login(router);\n    };\n    const __returned__ = {\n      router,\n      userStore,\n      loginUser,\n      onMounted,\n      get useAuth() {\n        return useAuth;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","useAuth","useRouter","router","userStore","loggedIn","push","name","loginUser","console","log","login"],"sources":["E:/Programming/PROJECT/sm-putra/smputra-frontend/src/views/auth/IndexView.vue"],"sourcesContent":["<template>\r\n    <div class=\"login\">\r\n      <div class=\"container\" style=\"margin-top: 100px\">\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"col-md-5\">\r\n            <div v-if=\"userStore.loginFailed\" class=\"alert alert-danger\">\r\n              Email atau Password Anda salah.\r\n            </div>\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                LOGIN\r\n                <hr>\r\n                <form @submit.prevent=\"loginUser\">\r\n                  <div class=\"form-group\">\r\n                    <label>EMAIL</label>\r\n                    <input type=\"email\" class=\"form-control\" v-model=\"userStore.user.email\" placeholder=\"Masukkan Email\">\r\n                    <div v-if=\"userStore.validation.email\" class=\"mt-2 alert alert-danger\">\r\n                      Masukkan Email\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <label>PASSWORD</label>\r\n                    <input type=\"password\" class=\"form-control\" v-model=\"userStore.user.password\" placeholder=\"Masukkan Password\">\r\n                    <div v-if=\"userStore.validation.password\" class=\"mt-2 alert alert-danger\">\r\n                      Masukkan Password\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" class=\"btn btn-primary\">LOGIN</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { onMounted } from 'vue';\r\n  import { useAuth } from \"@/store/auth\";\r\n  import { useRouter } from 'vue-router';\r\n  const router = useRouter();\r\n  \r\n  const userStore = useAuth();\r\n  \r\n  // check user already logged in\r\n  onMounted(() => {\r\n    if (userStore.loggedIn) {\r\n      // Redirect to dashboard using the router instance\r\n      router.push({ name: 'dashboard' });\r\n    }\r\n  });\r\n  \r\n  // Handle the login action\r\nconst loginUser = async () => {\r\n  console.log('Before pushing to dashboard:', router);\r\n  await userStore.login(router);\r\n};\r\n  \r\n  </script>\r\n  "],"mappings":";AAsCE,SAASA,SAAS,QAAQ,KAAK;AAC/B,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,SAAS,QAAQ,YAAY;;;;;;;IACtC,MAAMC,MAAM,GAAGD,SAAS,CAAC,CAAC;IAE1B,MAAME,SAAS,GAAGH,OAAO,CAAC,CAAC;;IAE3B;IACAD,SAAS,CAAC,MAAM;MACd,IAAII,SAAS,CAACC,QAAQ,EAAE;QACtB;QACAF,MAAM,CAACG,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAY,CAAC,CAAC;MACpC;IACF,CAAC,CAAC;;IAEF;IACF,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEP,MAAM,CAAC;MACnD,MAAMC,SAAS,CAACO,KAAK,CAACR,MAAM,CAAC;IAC/B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}