{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nimport api from '../api';\nexport const useCategory = defineStore({\n  id: 'categories',\n  state: () => ({\n    selectedCategory: null,\n    categories: [],\n    category: [],\n    error: null\n  }),\n  actions: {\n    async fetchDataCategory() {\n      try {\n        const response = await api.get('/api/categories');\n        this.categories = response.data.data.data;\n        console.log(this.categories);\n        this.error = null;\n      } catch (err) {\n        this.error = 'Error fetching category data.';\n      }\n    },\n    setSelectedCategory(category) {\n      this.selectedCategory = category;\n    },\n    async storeCategory(router) {\n      let formData = new FormData();\n      formData.append(\"name\", this.category.name);\n      formData.append(\"image\", this.category.image);\n      const response = await api.post('/api/categories', formData);\n      try {\n        this.category = [];\n        //redirect\n        router.push({\n          path: \"/dashboard/categories\"\n        });\n      } catch (err) {\n        //assign response error data to state \"errors\"\n        this.errors = response.data;\n      }\n    },\n    async updateCategory(router) {\n      let formData = new FormData();\n      formData.append(\"name\", this.category.name);\n      formData.append(\"image\", this.category.image);\n      formData.append(\"_method\", \"PATCH\");\n      //store data with API\n      const response = await api.post(`/api/categories/${this.category.id}`, formData);\n      try {\n        this.category = [];\n        router.push({\n          path: \"/dashboard/categories\"\n        });\n      } catch (err) {\n        this.errors = response.data;\n      }\n    },\n    async deleteCategory(id) {\n      try {\n        // Tambahkan logika penghapusan sesuai kebutuhan\n        await api.delete(`/api/categories/${id}`);\n        // Setelah penghapusan berhasil, perbarui data kategori\n        this.fetchDataCategory();\n      } catch (err) {\n        this.error = 'Error deleting category.';\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","api","useCategory","id","state","selectedCategory","categories","category","error","actions","fetchDataCategory","response","get","data","console","log","err","setSelectedCategory","storeCategory","router","formData","FormData","append","name","image","post","push","path","errors","updateCategory","deleteCategory","delete"],"sources":["E:/Programming/PROJECT/sm-putra/smputra-frontend/src/store/categories.js"],"sourcesContent":["import { defineStore } from 'pinia';\r\nimport api from '../api';\r\n\r\nexport const useCategory = defineStore({\r\n  id: 'categories',\r\n  state: () => ({ \r\n    selectedCategory: null,\r\n    categories: [],\r\n    category: [],\r\n    error: null\r\n  }),\r\n  actions: {\r\n    async fetchDataCategory() {\r\n      try {\r\n        const response = await api.get('/api/categories');\r\n        this.categories = response.data.data.data;\r\n        console.log(this.categories)\r\n        this.error = null;\r\n      } catch (err) {\r\n        this.error = 'Error fetching category data.';\r\n      }\r\n    },\r\n    setSelectedCategory(category){\r\n      this.selectedCategory = category;\r\n    },\r\n    async storeCategory (router){\r\n      let formData = new FormData();\r\n      formData.append(\"name\", this.category.name);\r\n      formData.append(\"image\", this.category.image);\r\n      const response = await api.post('/api/categories', formData)\r\n      try{\r\n          this.category = []\r\n          //redirect\r\n          router.push({ path: \"/dashboard/categories\" });\r\n      }\r\n      catch(err){\r\n          //assign response error data to state \"errors\"\r\n          this.errors = response.data;\r\n      }\r\n    },\r\n    async updateCategory(router) {\r\n      let formData = new FormData();\r\n      formData.append(\"name\", this.category.name);\r\n      formData.append(\"image\", this.category.image);\r\n      formData.append(\"_method\", \"PATCH\");\r\n      //store data with API\r\n      const response = await api.post(`/api/categories/${this.category.id}`, formData)\r\n      try{\r\n          this.category = []\r\n          router.push({ path: \"/dashboard/categories\" });\r\n      }\r\n      catch(err){\r\n          this.errors = response.data;\r\n      }\r\n    },\r\n    async deleteCategory(id) {\r\n      try {\r\n        // Tambahkan logika penghapusan sesuai kebutuhan\r\n        await api.delete(`/api/categories/${id}`);\r\n        // Setelah penghapusan berhasil, perbarui data kategori\r\n        this.fetchDataCategory();\r\n      } catch (err) {\r\n        this.error = 'Error deleting category.';\r\n      }\r\n    },\r\n}\r\n});\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,OAAOC,GAAG,MAAM,QAAQ;AAExB,OAAO,MAAMC,WAAW,GAAGF,WAAW,CAAC;EACrCG,EAAE,EAAE,YAAY;EAChBC,KAAK,EAAEA,CAAA,MAAO;IACZC,gBAAgB,EAAE,IAAI;IACtBC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,iBAAiB,CAAC;QACjD,IAAI,CAACN,UAAU,GAAGK,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACA,IAAI;QACzCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,UAAU,CAAC;QAC5B,IAAI,CAACE,KAAK,GAAG,IAAI;MACnB,CAAC,CAAC,OAAOQ,GAAG,EAAE;QACZ,IAAI,CAACR,KAAK,GAAG,+BAA+B;MAC9C;IACF,CAAC;IACDS,mBAAmBA,CAACV,QAAQ,EAAC;MAC3B,IAAI,CAACF,gBAAgB,GAAGE,QAAQ;IAClC,CAAC;IACD,MAAMW,aAAaA,CAAEC,MAAM,EAAC;MAC1B,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACf,QAAQ,CAACgB,IAAI,CAAC;MAC3CH,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACf,QAAQ,CAACiB,KAAK,CAAC;MAC7C,MAAMb,QAAQ,GAAG,MAAMV,GAAG,CAACwB,IAAI,CAAC,iBAAiB,EAAEL,QAAQ,CAAC;MAC5D,IAAG;QACC,IAAI,CAACb,QAAQ,GAAG,EAAE;QAClB;QACAY,MAAM,CAACO,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAwB,CAAC,CAAC;MAClD,CAAC,CACD,OAAMX,GAAG,EAAC;QACN;QACA,IAAI,CAACY,MAAM,GAAGjB,QAAQ,CAACE,IAAI;MAC/B;IACF,CAAC;IACD,MAAMgB,cAAcA,CAACV,MAAM,EAAE;MAC3B,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACf,QAAQ,CAACgB,IAAI,CAAC;MAC3CH,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACf,QAAQ,CAACiB,KAAK,CAAC;MAC7CJ,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC;MACnC;MACA,MAAMX,QAAQ,GAAG,MAAMV,GAAG,CAACwB,IAAI,CAAE,mBAAkB,IAAI,CAAClB,QAAQ,CAACJ,EAAG,EAAC,EAAEiB,QAAQ,CAAC;MAChF,IAAG;QACC,IAAI,CAACb,QAAQ,GAAG,EAAE;QAClBY,MAAM,CAACO,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAwB,CAAC,CAAC;MAClD,CAAC,CACD,OAAMX,GAAG,EAAC;QACN,IAAI,CAACY,MAAM,GAAGjB,QAAQ,CAACE,IAAI;MAC/B;IACF,CAAC;IACD,MAAMiB,cAAcA,CAAC3B,EAAE,EAAE;MACvB,IAAI;QACF;QACA,MAAMF,GAAG,CAAC8B,MAAM,CAAE,mBAAkB5B,EAAG,EAAC,CAAC;QACzC;QACA,IAAI,CAACO,iBAAiB,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZ,IAAI,CAACR,KAAK,GAAG,0BAA0B;MACzC;IACF;EACJ;AACA,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}