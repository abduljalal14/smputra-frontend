{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      //state loggedIn with localStorage\n      loggedIn: localStorage.getItem('loggedIn'),\n      //state token\n      token: localStorage.getItem('token'),\n      //state user\n      user: [],\n      //state validation\n      validation: [],\n      //state login failed\n      loginFailed: null\n    };\n  },\n  methods: {\n    login() {\n      if (this.user.email && this.user.password) {\n        axios.get('http://localhost:8000/sanctum/csrf-cookie').then(response => {\n          //debug cookie\n          console.log(response);\n          axios.post('http://localhost:8000/api/login', {\n            email: this.user.email,\n            password: this.user.password\n          }).then(res => {\n            //debug user login\n            console.log(res);\n            if (res.data.success) {\n              //set localStorage\n              localStorage.setItem(\"loggedIn\", \"true\");\n\n              //set localStorage Token\n              localStorage.setItem(\"token\", res.data.token);\n\n              //change state\n              this.loggedIn = true;\n\n              //redirect dashboard\n              return this.$router.push({\n                name: 'dashboard'\n              });\n            } else {\n              //set state login failed\n              this.loginFailed = true;\n            }\n          }).catch(error => {\n            console.log(error);\n          });\n        });\n      }\n      this.validation = [];\n      if (!this.user.email) {\n        this.validation.email = true;\n      }\n      if (!this.user.password) {\n        this.validation.password = true;\n      }\n    }\n  },\n  //check user already logged in\n  mounted() {\n    if (this.loggedIn) {\n      return this.$router.push({\n        name: 'dashboard'\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","loggedIn","localStorage","getItem","token","user","validation","loginFailed","methods","login","email","password","get","then","response","console","log","post","res","success","setItem","$router","push","catch","error","mounted"],"sources":["E:\\Programming\\Laravue\\vue-sanctum\\src\\views\\auth\\IndexView.vue"],"sourcesContent":["<template>\r\n    <div class=\"login\">\r\n        <div class=\"container\" style=\"margin-top:100px\">\r\n            <div class=\"row justify-content-center\">\r\n                <div class=\"col-md-5\">\r\n                    <div v-if=\"loginFailed\" class=\"alert alert-danger\">\r\n                        Email atau Password Anda salah.\r\n                    </div>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            LOGIN\r\n                            <hr>\r\n                            <form @submit.prevent=\"login\">\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label>EMAIL</label>\r\n                                    <input type=\"email\" class=\"form-control\" v-model=\"user.email\"\r\n                                        placeholder=\"Masukkan Email\">\r\n                                    <div v-if=\"validation.email\" class=\"mt-2 alert alert-danger\">\r\n                                        Masukkan Email\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label>PASSWORD</label>\r\n                                    <input type=\"password\" class=\"form-control\" v-model=\"user.password\"\r\n                                        placeholder=\"Masukkan Password\">\r\n                                    <div v-if=\"validation.password\" class=\"mt-2 alert alert-danger\">\r\n                                        Masukkan Password\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <button type=\"submit\" class=\"btn btn-primary\">LOGIN</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios'\r\n\r\n    export default {\r\n        name: 'Login',\r\n\r\n        data() {\r\n            return {\r\n                //state loggedIn with localStorage\r\n                loggedIn: localStorage.getItem('loggedIn'),\r\n                //state token\r\n                token: localStorage.getItem('token'),\r\n                //state user\r\n                user: [],\r\n                //state validation\r\n                validation: [],\r\n                //state login failed\r\n                loginFailed: null\r\n            }\r\n        },\r\n        methods: {\r\n\r\n            login() {\r\n                if (this.user.email && this.user.password) {\r\n                    axios.get('http://localhost:8000/sanctum/csrf-cookie')\r\n                        .then(response => {\r\n\r\n                            //debug cookie\r\n                            console.log(response)\r\n\r\n                            axios.post('http://localhost:8000/api/login', {\r\n                                email: this.user.email,\r\n                                password: this.user.password\r\n                            }).then(res => {\r\n\r\n                                //debug user login\r\n                                console.log(res)\r\n\r\n                                if (res.data.success) {\r\n\r\n                                    //set localStorage\r\n                                    localStorage.setItem(\"loggedIn\", \"true\")\r\n\r\n                                    //set localStorage Token\r\n                                    localStorage.setItem(\"token\", res.data.token)\r\n\r\n                                    //change state\r\n                                    this.loggedIn = true\r\n\r\n                                    //redirect dashboard\r\n                                    return this.$router.push({ name: 'dashboard' })\r\n\r\n                                } else {\r\n\r\n                                    //set state login failed\r\n                                    this.loginFailed = true\r\n\r\n                                }\r\n\r\n                            }).catch(error => {\r\n                                console.log(error)\r\n                            })\r\n\r\n                        })\r\n                }\r\n\r\n                this.validation = []\r\n\r\n                if (!this.user.email) {\r\n                    this.validation.email = true\r\n                }\r\n\r\n                if (!this.user.password) {\r\n                    this.validation.password = true\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        //check user already logged in\r\n        mounted() {\r\n            if (this.loggedIn) {\r\n                return this.$router.push({ name: 'dashboard' })\r\n            }\r\n        }\r\n    }\r\n</script>"],"mappings":";AA2CI,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACXC,IAAI,EAAE,OAAO;EAEbC,IAAIA,CAAA,EAAG;IACH,OAAO;MACH;MACAC,QAAQ,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAC1C;MACAC,KAAK,EAAEF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACpC;MACAE,IAAI,EAAE,EAAE;MACR;MACAC,UAAU,EAAE,EAAE;MACd;MACAC,WAAW,EAAE;IACjB;EACJ,CAAC;EACDC,OAAO,EAAE;IAELC,KAAKA,CAAA,EAAG;MACJ,IAAI,IAAI,CAACJ,IAAI,CAACK,KAAI,IAAK,IAAI,CAACL,IAAI,CAACM,QAAQ,EAAE;QACvCb,KAAK,CAACc,GAAG,CAAC,2CAA2C,EAChDC,IAAI,CAACC,QAAO,IAAK;UAEd;UACAC,OAAO,CAACC,GAAG,CAACF,QAAQ;UAEpBhB,KAAK,CAACmB,IAAI,CAAC,iCAAiC,EAAE;YAC1CP,KAAK,EAAE,IAAI,CAACL,IAAI,CAACK,KAAK;YACtBC,QAAQ,EAAE,IAAI,CAACN,IAAI,CAACM;UACxB,CAAC,CAAC,CAACE,IAAI,CAACK,GAAE,IAAK;YAEX;YACAH,OAAO,CAACC,GAAG,CAACE,GAAG;YAEf,IAAIA,GAAG,CAAClB,IAAI,CAACmB,OAAO,EAAE;cAElB;cACAjB,YAAY,CAACkB,OAAO,CAAC,UAAU,EAAE,MAAM;;cAEvC;cACAlB,YAAY,CAACkB,OAAO,CAAC,OAAO,EAAEF,GAAG,CAAClB,IAAI,CAACI,KAAK;;cAE5C;cACA,IAAI,CAACH,QAAO,GAAI,IAAG;;cAEnB;cACA,OAAO,IAAI,CAACoB,OAAO,CAACC,IAAI,CAAC;gBAAEvB,IAAI,EAAE;cAAY,CAAC;YAElD,OAAO;cAEH;cACA,IAAI,CAACQ,WAAU,GAAI,IAAG;YAE1B;UAEJ,CAAC,CAAC,CAACgB,KAAK,CAACC,KAAI,IAAK;YACdT,OAAO,CAACC,GAAG,CAACQ,KAAK;UACrB,CAAC;QAEL,CAAC;MACT;MAEA,IAAI,CAAClB,UAAS,GAAI,EAAC;MAEnB,IAAI,CAAC,IAAI,CAACD,IAAI,CAACK,KAAK,EAAE;QAClB,IAAI,CAACJ,UAAU,CAACI,KAAI,GAAI,IAAG;MAC/B;MAEA,IAAI,CAAC,IAAI,CAACL,IAAI,CAACM,QAAQ,EAAE;QACrB,IAAI,CAACL,UAAU,CAACK,QAAO,GAAI,IAAG;MAClC;IAEJ;EACJ,CAAC;EAED;EACAc,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAACxB,QAAQ,EAAE;MACf,OAAO,IAAI,CAACoB,OAAO,CAACC,IAAI,CAAC;QAAEvB,IAAI,EAAE;MAAY,CAAC;IAClD;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}